
os: Visual Studio 2015

environment:
  matrix:
    - ARCH:                x64
      D_COMPILER:          dmd
      D_VERSION:           2.079.1
      C_COMPILER:          MSVC
      VISUALD_VER:         v0.45.1-rc2
      LDC_VERSION:         1.8.0

cache:
  - C:\projects\gnumake\make.exe
  - C:\projects\VisualD-v0.45.1-rc2.exe
  - C:\projects\ldc2-1.8.0-windows-multilib.7z

skip_commits:
  # Avoid retesting the merged PR on `master` or `stable`
  message: /^Merge pull request/

artifacts:
  - path: src/dmd.exe
    name: dmd 64-bit
  - path: generated/Windows/Release/Win32/dmd.exe
    name: dmd 32-bit built with LDC

init:
  - git config --global core.autocrlf input

build_script:
  - cd c:/projects/
  - call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64

  - set LDC_DIR=ldc2-%LDC_VERSION%-windows-multilib
  - set LDC_INSTALLER=%LDC_DIR%.7z
  - set LDC_URL=https://github.com/ldc-developers/ldc/releases/download/v%LDC_VERSION%/%LDC_INSTALLER%
  - ps: |
        If (-not (Test-Path $Env:LDC_INSTALLER)) {
            Start-FileDownload $Env:LDC_URL -FileName $Env:LDC_INSTALLER
        }
        7z x $Env:LDC_INSTALLER > $null
        If (-not (Test-Path $Env:LDC_DIR/bin/ldmd2.exe)) {
            echo "Unexpected LDC installation, $Env:LDC_INSTALLER/bin/ldmd2.exe missing"
        }

  # Download & install Visual D (needs admin rights?)
  - set VISUALD_INSTALLER=VisualD-%VISUALD_VER%.exe
  - set VISUALD_URL=https://github.com/dlang/visuald/releases/download/%VISUALD_VER%/%VISUALD_INSTALLER%
  - ps: |
        If (-not (Test-Path $Env:VISUALD_INSTALLER)) {
            Start-FileDownload $Env:VISUALD_URL -FileName $Env:VISUALD_INSTALLER
        }
  - .\%VISUALD_INSTALLER% /S
  # configure DMD path
  - reg add "HKCU\SOFTWARE\Microsoft\VisualStudio\14.0\ToolsOptionsPages\Projects\Visual D Settings" /v DMDInstallDir /t REG_SZ /d c:\projects\dmd2 /reg:32 /f
  # configure LDC path
  - reg add "HKCU\SOFTWARE\Microsoft\VisualStudio\14.0\ToolsOptionsPages\Projects\Visual D Settings" /v LDCInstallDir /t REG_SZ /d c:\projects\%LDC_DIR%\ /reg:32 /f
  # disable link dependencies monitoring, fails on AppVeyor server
  - reg add "HKLM\SOFTWARE\Microsoft\VisualStudio\14.0\ToolsOptionsPages\Projects\Visual D Settings" /v optlinkDeps /t REG_DWORD /d 0 /reg:32 /f

  - bash --version
  - sh --login /c/projects/dc/appveyor.sh

  # build via VS projects with LDC
  - cd c:\projects\dc\src
  # unfortunately, multilib version of LDC and Visual D don't work together seamlessly (anymore?)
  - set LDC_ARGS="/p:ExternalLinkerOptions=phobos2-ldc.lib druntime-ldc.lib"
  - set LDC_ARGS=%LDC_ARGS% /p:DCompiler=LDC
  - msbuild /target:dmd /p:Configuration=Release /p:Platform=Win32 %LDC_ARGS% vcbuild\dmd.sln

  # check: build druntime unittests and dmd test suite
  - cd c:\projects\druntime
  - set PATH=c:\projects\dmd2\windows\bin;%PATH%
  - make -f win64.mak MODEL=32mscoff DMD=..\dc\generated\Windows\Release\Win32\dmd.exe VCDIR="%VCINSTALLDIR%." "CC=\"%VCINSTALLDIR%/bin/cl.exe\"" SDKDIR=unused clean
  - make -f win64.mak MODEL=32mscoff DMD=..\dc\generated\Windows\Release\Win32\dmd.exe VCDIR="%VCINSTALLDIR%." "CC=\"%VCINSTALLDIR%/bin/cl.exe\"" SDKDIR=unused target unittest32mscoff
  - cd c:\projects\phobos
  - make -f win64.mak MODEL=32mscoff DMD=..\dc\generated\Windows\Release\Win32\dmd.exe VCDIR="%VCINSTALLDIR%." "CC=\"%VCINSTALLDIR%/bin/cl.exe\"" SDKDIR=unused clean
  - make -f win64.mak MODEL=32mscoff DMD=..\dc\generated\Windows\Release\Win32\dmd.exe VCDIR="%VCINSTALLDIR%." "CC=\"%VCINSTALLDIR%/bin/cl.exe\"" SDKDIR=unused
  - cd c:\projects\dc\test
  - set CC=c:/"Program Files (x86)"/"Microsoft Visual Studio 14.0"/VC/bin/cl.exe
  - ..\..\gnumake\make -j3 all MODEL=32mscoff ARGS="-O -inline -g" "OS=win32" DMD=..\generated\Windows\Release\Win32\dmd.exe LIB="../../phobos;%LIB%" RESULTS_DIR=test_m32mscoff

test_script: true
